package com.persys.osmanager.order;

import br.com.model.interfaces.IOrdem;
import com.persys.osmanager.componente.helper.AttrDim;
import com.persys.osmanager.order.data.TransactionsContainerNotaData;
import com.restmb.RestMBClient;
import com.restmb.types.Nota;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Window.CloseEvent;
import com.vaadin.ui.Window.CloseListener;

/** 
@author Ricardo Sabatine
@version Revision 1.1

Form para o contrato

@since 07/10/2013
*/
public class OrdemNotaView extends CustomComponent {

	private static final long serialVersionUID = 1L;
	private VerticalLayout mainLayout;
	
	private final TransactionsContainerNotaData dataNota = new TransactionsContainerNotaData();
	
	private Table tableNotas = null;
	private RestMBClient client = null;
	private IOrdem ordem;
	
	public OrdemNotaView(RestMBClient client, IOrdem ordem) {
		this.client = client;
		this.ordem = ordem;
		
		buildMainLayout();
		setCompositionRoot(mainLayout);
		defaultTable(ordem);

	}

		@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth(AttrDim.FORM_WIDTH);
		setHeight(AttrDim.FORM_HEIGHT);
		
		// buttonSalvar
   		Button buttonAdicionar = new Button("Adicionar Nota",new Button.ClickListener() {
   		            /**
   					 * BOT?????????O SALVAR
   					 */
   					private static final long serialVersionUID = 1L;

   					// inline click-listener
   		            public void buttonClick(ClickEvent event) {
   		            	modoAdd();
   		            }
   		        });
   		
   		
   		buttonAdicionar.setWidth("-1px");
   		buttonAdicionar.setHeight("-1px");
   		buttonAdicionar.setVisible(true);
   		buttonAdicionar.addStyleName("wide");
   		buttonAdicionar.addStyleName("default");
       	mainLayout.addComponent(buttonAdicionar);
   		mainLayout.setComponentAlignment(buttonAdicionar, new Alignment(34));
     
		mainLayout.addComponent(modoTabela());
		mainLayout.setExpandRatio(tableNotas, 1f);
		
		return mainLayout;
	}
	
	 public Table modoTabela(){
		   tableNotas = new Table() {
		        /**
				 * 
				 */
				private static final long serialVersionUID = 1L;

				@Override
		        protected String formatPropertyValue(Object rowId, Object colId,
		                Property<?> property) {
		          
		            return super.formatPropertyValue(rowId, colId, property);
		        }
		    };
		   tableNotas.setSizeFull();
		   tableNotas.addStyleName("borderless");
		   tableNotas.setSelectable(true);
		   tableNotas.setColumnCollapsingAllowed(true);
		   tableNotas.setColumnReorderingAllowed(true);
		   tableNotas.setContainerDataSource(dataNota);

		   tableNotas.addValueChangeListener(new ValueChangeListener() {
		        /**
				 * 
				 */
				private static final long serialVersionUID = 1L;
		
				@Override
		        public void valueChange(ValueChangeEvent event) {
		                visualizar(tableNotas.getItem(tableNotas.getValue()));
		            } 
		    });
		    
		   tableNotas.setImmediate(true);
		   return tableNotas;
		}
	
	public void defaultTable(IOrdem ordem) {
		   dataNota.removeAllItems();
		  	try{
		  	  dataNota.load(client,"/ordem/"+ordem.getId()+"/nota");
		    }catch (Exception e) {}
		}

	public void visualizar(Object objeto){
		//getUI().addWindow(new OrdemNotaViewWindows((INota)objeto,client));
	}	
	
	public void modoAdd(){
		com.vaadin.ui.Window window = new OrdemNotaViewWindows(new Nota(ordem.getId()),client);
		getUI().addWindow(window);
		window.addCloseListener(new CloseListener() {
			private static final long serialVersionUID = 1L;

			@Override
			public void windowClose(CloseEvent e) {
				defaultTable(ordem);
			}
		});
	}
	
}
