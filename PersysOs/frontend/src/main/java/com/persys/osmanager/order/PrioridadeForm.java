package com.persys.osmanager.order;

import java.util.Locale;
import java.util.ResourceBundle;

import br.com.model.interfaces.IPrioridade;

import com.persys.osmanager.componente.ComponenteFactory;
import com.persys.osmanager.componente.ContainerUtils;
import com.persys.osmanager.componente.helper.AttrDim;
import com.persys.osmanager.componente.interfaces.IForm;
import com.persys.osmanager.data.AppData;
import com.persys.osmanager.exception.ViewException;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.event.ShortcutAction.ModifierKey;
import com.vaadin.shared.ui.colorpicker.Color;
import com.vaadin.ui.AbstractField;
import com.vaadin.ui.ColorPicker;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

/**
  * @author ricardosabatine, jpmorijo
  * @version 1.0.0
  * @since 27/03/2013 Form Prioridade em Ordem de Servico
  * <p>Traduzido Ingles, Portugues, Pacote com traducoes com/persys/frontend/priority</p>
  */

public class PrioridadeForm extends CustomComponent implements IForm<IPrioridade>{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID   = 1L;
	private TextArea 	      textFieldDescricao = null;
	private TextField 	   	  textFieldNome 	 = null;
	private ComboBox 	   	  comboBoxStatus 	 = null;
	private TextField 	      textFieldCodigo    = null;
	private ColorPicker    	  colorPicker		 = null;
	private final ComponenteFactory componenteFactory = new ComponenteFactory();
	
	private final static ResourceBundle bundle;
	static{
		 bundle = ResourceBundle.getBundle("com/persys/frontend/priority",Locale.getDefault());
	}
	
	IPrioridade prioridade = null;
	
	public PrioridadeForm() {
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
	
		setCompositionRoot(buildMainLayout());
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		VerticalLayout mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		mainLayout.addComponent(buildHorizontalLayout());
		
		// textFieldNome
		textFieldNome = componenteFactory.createTextFieldRequiredError(new TextField(),bundle.getString("nameofpriority"),bundle.getString("nameofpriorityinvalid"),
				AttrDim.FORM_COM_SINGLE_WIDTH);
		textFieldNome.setMaxLength(100);
		textFieldNome.addShortcutListener(
		        new AbstractField.FocusShortcut(textFieldNome, KeyCode.ENTER,
		                                        ModifierKey.SHIFT));
		textFieldNome.focus();
		mainLayout.addComponent(textFieldNome);
			
		colorPicker = new ColorPicker();
		colorPicker.setCaption(bundle.getString("colorpriority"));
		colorPicker.setImmediate(false);
		colorPicker.setWidth(AttrDim.FORM_COM_SINGLE_WIDTH);
		colorPicker.setHeight("-1px");
		mainLayout.addComponent(colorPicker);
		
		textFieldDescricao = new TextArea();
		textFieldDescricao.setCaption(bundle.getString("description"));
		textFieldDescricao.setImmediate(false);
		textFieldDescricao.setWidth(AttrDim.FORM_COM_SINGLE_WIDTH);
		textFieldDescricao.setHeight("-1px");
		textFieldDescricao.setMaxLength(255);
		mainLayout.addComponent(textFieldDescricao);
			
		return mainLayout;
	}
	
	@SuppressWarnings("deprecation")
	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout() {
		// common part: create layout
		HorizontalLayout horizontalLayout = new HorizontalLayout();
		horizontalLayout.setImmediate(false);
		horizontalLayout.setWidth("-1px");
		horizontalLayout.setHeight("-1px");
		horizontalLayout.setMargin(false);
		horizontalLayout.setSpacing(true);
		
		// textFieldCodigo
		textFieldCodigo = new TextField();
		textFieldCodigo.setCaption(bundle.getString("code"));
		textFieldCodigo.setImmediate(false);
		textFieldCodigo.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		textFieldCodigo.setHeight("-1px");
		horizontalLayout.addComponent(textFieldCodigo);
		
		// comboBoxStatus
		comboBoxStatus = new ComboBox();
		comboBoxStatus.setCaption(bundle.getString("situation"));
		comboBoxStatus.setImmediate(false);
		comboBoxStatus.setContainerDataSource(ContainerUtils.listaStatusBean());
		comboBoxStatus.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		comboBoxStatus.setHeight("-1px");
		comboBoxStatus.setContainerDataSource(AppData.listStatusInteger());
		comboBoxStatus.setItemCaptionMode(ComboBox.ITEM_CAPTION_MODE_PROPERTY);
		comboBoxStatus.setItemCaptionPropertyId("statusNome");
		comboBoxStatus.setNullSelectionAllowed(false);
		horizontalLayout.addComponent(comboBoxStatus);
		
		return horizontalLayout;
	}


	@Override
	public IPrioridade commit() throws ViewException {
		try{
			componenteFactory.valida();
			
			prioridade.setCodigo(textFieldCodigo.getValue());
			prioridade.setPrioridade(textFieldNome.getValue());
			prioridade.setDescricao(textFieldDescricao.getValue());
			prioridade.setStatusModel((Integer)comboBoxStatus.getValue());
			prioridade.setCor(String.valueOf(colorPicker.getColor().getRGB()));
			return prioridade;
		}catch(Exception e){
			throw new ViewException(e.getMessage());
		}	
	}

	@Override
	public void initData(IPrioridade data) {
		
		textFieldCodigo.setReadOnly(false);
		textFieldCodigo.setValue(data.getCodigo());
		textFieldNome.setValue(data.getPrioridade());
		textFieldDescricao.setValue(data.getDescricao());
		comboBoxStatus.select(data.getStatusModel());
		if(!data.getCor().isEmpty())
			colorPicker.setColor(new Color(Integer.parseInt(data.getCor())));
		
		this.prioridade = data;
		
	}

	@Override
	public void modoView() {
		textFieldCodigo.setReadOnly(true);
	}

	@Override
	public void modoAdd() {
		textFieldCodigo.setReadOnly(true);
	}

}
