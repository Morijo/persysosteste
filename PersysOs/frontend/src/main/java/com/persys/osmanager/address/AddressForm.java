package com.persys.osmanager.address;

import java.util.Locale;
import java.util.ResourceBundle;

import org.json.JSONException;
import br.com.principal.helper.CepClientHelper;
import com.persys.osmanager.componente.ComponenteFactory;
import com.persys.osmanager.componente.helper.AttrDim;
import com.persys.osmanager.componente.interfaces.IForm;
import com.persys.osmanager.data.AppData;
import com.persys.osmanager.exception.ViewException;
import com.restmb.types.Endereco;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class AddressForm extends CustomComponent implements IForm<br.com.model.interfaces.IEndereco> {

	private static final long serialVersionUID = 1L;
	private TextField textFieldCidade; 
	private ComboBox comboBoxEstado;
	private TextField textFieldCep;
	private TextField textFieldBairro;
	private TextField textFieldNumero;
	private TextField textFieldCompleto;
	private TextField textFieldRua;

	private final static ResourceBundle bundle;
	private static String errorMessage;
	private final ComponenteFactory componenteFactory = new ComponenteFactory();

	static{
		bundle = ResourceBundle.getBundle("com/persys/frontend/address",Locale.getDefault());
		errorMessage = bundle.getString("requirederror");
	}

	private br.com.model.interfaces.IEndereco endereco = new Endereco();

	public AddressForm() {
		setCompositionRoot(buildMainLayout());
		setSizeFull();
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		VerticalLayout mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setSizeFull();
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		mainLayout.addComponent(buildHorizontalLayoutCEP());

		textFieldRua = componenteFactory.createTextFieldRequiredError(new TextField(), bundle.getString("street"), errorMessage, AttrDim.FORM_COM_SINGLE_WIDTH);
		mainLayout.addComponent(textFieldRua);

		mainLayout.addComponent(buildHorizontalLayoutNumero());

		mainLayout.addComponent(buildHorizontalLayoutBairro());

		mainLayout.addComponent(buildHorizontalLayoutEstado());

		return mainLayout;
	}

	private HorizontalLayout buildHorizontalLayoutCEP() {
		HorizontalLayout horizontalLayout = createHorizontalLayout();

		textFieldCep = componenteFactory.createTextFieldRequiredError(new TextField(), bundle.getString("zip"), errorMessage);
		textFieldCep.setImmediate(true);
		horizontalLayout.addComponent(textFieldCep);
		
		return horizontalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutNumero() {
		HorizontalLayout horizontalLayout = createHorizontalLayout();

		textFieldNumero = componenteFactory.createTextFieldRequiredError(new TextField(), bundle.getString("number"), errorMessage);
		horizontalLayout.addComponent(textFieldNumero);

		textFieldCompleto = componenteFactory.createTextField(new TextField(), bundle.getString("obs"));
		horizontalLayout.addComponent(textFieldCompleto);
		return horizontalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutBairro() {
		HorizontalLayout horizontalLayout = createHorizontalLayout();

		textFieldBairro = componenteFactory.createTextFieldRequiredError(new TextField(), bundle.getString("neighborhood"),errorMessage);
		horizontalLayout.addComponent(textFieldBairro);

		textFieldCidade = componenteFactory.createTextFieldRequiredError(new TextField(), bundle.getString("city"),errorMessage);
		horizontalLayout.addComponent(textFieldCidade);

		return horizontalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutEstado() {
		HorizontalLayout horizontalLayout = createHorizontalLayout();

		comboBoxEstado = componenteFactory.createComboBoxRequiredError(new ComboBox(), bundle.getString("state"),errorMessage);
		comboBoxEstado.setContainerDataSource(AppData.listStates());
		horizontalLayout.addComponent(comboBoxEstado);

		return horizontalLayout;
	}

	private HorizontalLayout createHorizontalLayout() {
		HorizontalLayout horizontalLayout = new HorizontalLayout();
		horizontalLayout.setImmediate(false);
		horizontalLayout.setWidth("-1px");
		horizontalLayout.setHeight("-1px");
		horizontalLayout.setSpacing(true);
		return horizontalLayout;
	}

	@Override
	public br.com.model.interfaces.IEndereco commit() throws ViewException {

		componenteFactory.valida();
		endereco.setLogradouro(textFieldRua.getValue());
		endereco.setCidade(textFieldCidade.getValue());
		endereco.setBairro(comboBoxEstado.getValue().toString());
		endereco.setCep(textFieldCep.getValue().replace(".","").replace("-",""));
		endereco.setBairro(textFieldBairro.getValue());
		endereco.setNumero(textFieldNumero.getValue());
		endereco.setComplemento(textFieldCompleto.getValue());
		endereco.setEstado(comboBoxEstado.getValue().toString());

		return endereco;
	}

	@Override
	public void initData(br.com.model.interfaces.IEndereco data) {

		if(data != null){
			endereco = data;
			textFieldRua.setValue(endereco.getLogradouro());
			textFieldNumero.setValue(endereco.getNumero());
			textFieldBairro.setValue(endereco.getBairro());
			textFieldCep.setValue(endereco.getCep());
			textFieldCidade.setValue(endereco.getCidade());
			textFieldCompleto.setValue(endereco.getComplemento());
			comboBoxEstado.select(endereco.getEstado());
		}
		addEventoCEP();
	}

	@Override
	public void modoView() {
	}

	@Override
	public void modoAdd() {
	}

	
	public void addEventoCEP(){
		textFieldCep.addValueChangeListener(new Property.ValueChangeListener() {

			private static final long serialVersionUID = 1L;

			public void valueChange(ValueChangeEvent event) {
				try{
					if(textFieldCep.getValue() != null && textFieldCep.getValue().length() > 7){
						StringBuilder cep = CepClientHelper.consultaCEP(textFieldCep.getValue());
						try {
							org.json.JSONObject json = new org.json.JSONObject(cep.toString());
							textFieldRua.setValue(json.getString("tipo_logradouro")+" "+ json.getString("logradouro"));
							textFieldCidade.setValue(json.getString("cidade"));
							textFieldBairro.setValue(json.getString("bairro"));
							comboBoxEstado.setValue(json.getString("uf"));

						} catch (JSONException e) {
							e.printStackTrace();
						}
					}
				}catch(Exception e){}
			}
		});
	}
}
