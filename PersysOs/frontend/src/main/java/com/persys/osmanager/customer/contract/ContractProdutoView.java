package com.persys.osmanager.customer.contract;

import java.util.Date;
import java.util.List;

import br.com.model.interfaces.IClienteObjeto;

import com.persys.osmanager.componente.ComponenteFactory;
import com.persys.osmanager.componente.DialogWindow;
import com.persys.osmanager.componente.SearchFormWindow;
import com.persys.osmanager.componente.helper.AttrDim;
import com.persys.osmanager.componente.interfaces.IFormWindows;
import com.persys.osmanager.componente.interfaces.IMessage;
import com.persys.osmanager.exception.ViewException;
import com.persys.osmanager.product.data.TransactionsContainerProduct;
import com.restmb.Connection;
import com.restmb.RestMBClient;
import com.restmb.oauth.service.ParameterList;
import com.restmb.types.ClienteObjeto;
import com.restmb.types.ClienteObjetoProduto;
import com.restmb.types.Produto;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.server.ThemeResource;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;


/** 
@author Ricardo Sabatine
@version Revision 1.1

Form para o contrato

@since 07/10/2013
 */
public class ContractProdutoView extends CustomComponent implements IFormWindows<Produto>{

	private static final long serialVersionUID = 1L;
	private Table tableProduto = null;
	private TransactionsContainer data = new TransactionsContainer();
	private SearchFormWindow<Produto> contratoProdutoFormWindows = null;

	private IClienteObjeto clienteObjeto = null;

	private RestMBClient client = null;

	public ContractProdutoView(RestMBClient client, IClienteObjeto clienteObjeto) {
		this.client = client;
		this.clienteObjeto = clienteObjeto;

		setWidth(AttrDim.FORM_WIDTH);
		setHeight(AttrDim.FORM_HEIGHT);
		setCompositionRoot(buildMainLayout());

	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		VerticalLayout mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		
		Button buttonAdicionar = new Button("Adicionar Produto",new Button.ClickListener() {
			private static final long serialVersionUID = 1L;

			// inline click-listener
			public void buttonClick(ClickEvent event) {
				modoAdd();
			}
		});

		buttonAdicionar.setWidth("-1px");
		buttonAdicionar.setHeight("-1px");
		buttonAdicionar.setVisible(true);
		buttonAdicionar.addStyleName("wide");
		buttonAdicionar.addStyleName("default");
		mainLayout.addComponent(buttonAdicionar);
		mainLayout.setComponentAlignment(buttonAdicionar, new Alignment(34));
		mainLayout.addComponent(modoTabela());
		mainLayout.setExpandRatio(tableProduto, 1f);
		return mainLayout;
	}

	public Table modoTabela(){
		tableProduto = new Table() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			protected String formatPropertyValue(Object rowId, Object colId,
					Property<?> property) {

				return super.formatPropertyValue(rowId, colId, property);
			}
		};
		tableProduto.setSizeFull();
		tableProduto.addStyleName("borderless");
		tableProduto.setSelectable(false);
		tableProduto.setColumnCollapsingAllowed(true);
		tableProduto.setColumnReorderingAllowed(true);
		data.removeAllContainerFilters();
		tableProduto.setContainerDataSource(data);

		tableProduto.setVisibleColumns(new Object[] {"Produto","Data Aquisição","Situação"," ","  "});
		tableProduto.setColumnExpandRatio("Produto", 1.0f);
		tableProduto.addValueChangeListener(new ValueChangeListener() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				visualizar(tableProduto.getItem(tableProduto.getValue()));
			} 
		});

		tableProduto.setImmediate(true);
		defaultTable();
		return tableProduto;
	}

	public void defaultTable() {
		data.removeAllItems();
		try{
			Connection<ClienteObjetoProduto> lista = Produto.listaAll(client,"/contrato/"+this.clienteObjeto.getId()+"/produto",ClienteObjetoProduto.class);
			for(List<ClienteObjetoProduto> listaContrato : lista){
				for(ClienteObjetoProduto clienteObjetoProduto : listaContrato){
					data.addTransaction(clienteObjetoProduto);
				}
			}
		}catch (Exception e) {
			System.out.println(e.getMessage());
		}
	}


	public class TransactionsContainer extends com.vaadin.data.util.IndexedContainer {

		private static final long serialVersionUID = 1L;

		public TransactionsContainer() {
			addContainerProperty("Id", Long.class, -1);
			addContainerProperty("Produto", String.class, "");
			addContainerProperty("Data Aquisição", Date.class, new Date());
			addContainerProperty("Situação", ComboBox.class, new ComboBox());
			addContainerProperty(" ", Button.class, new Button());
			addContainerProperty("  ", Button.class, new Button());

		}

		@SuppressWarnings("unchecked")
		public void addTransaction(ClienteObjetoProduto clienteObjetoProduto) {
			Object id = addItem();
			com.vaadin.data.Item item = getItem(id);
			if (item != null) {
				item.getItemProperty("Produto").setValue(clienteObjetoProduto.getProduto().getCodigo() +" - "+ 
				clienteObjetoProduto.getProduto().getNome());
				
				item.getItemProperty("Data Aquisição").setValue(clienteObjetoProduto.getDataAquisicao());
				
				ComboBox comboBox = ComponenteFactory.createComboboxStatus(clienteObjetoProduto.getStatusModel());
				comboBox.setWidth("80");
				item.getItemProperty("Situação").setValue(comboBox);

				Button save = new Button();
				save.setIcon(new ThemeResource("../reindeer/Icons/save.png"));
				save.setImmediate(true);
				save.setWidth("38px");
				save.setHeight("-1px");
				save.addStyleName("newicon");

				ItemContractProdutoView itemC = new ItemContractProdutoView(clienteObjetoProduto, item);
				save.setData(itemC);
				save.addClickListener(new SaveListener());
				
				item.getItemProperty(" ").setValue(save);
				
				Button remove = new Button();
				remove.setIcon(new ThemeResource("../reindeer/Icons/delete.png"));
				remove.setImmediate(true);
				remove.setWidth("40px");
				remove.setHeight("-1px");
				remove.addStyleName("newicon");
				remove.setData(itemC);
				remove.addClickListener(new RemoveListener());
				
				item.getItemProperty("  ").setValue(remove);
				
			}
		}
	}

	private class SaveListener implements Button.ClickListener {
	
		private static final long serialVersionUID = 1L;

		@Override
		public void buttonClick(ClickEvent event) {
			ItemContractProdutoView data = (ItemContractProdutoView) event.getButton().getData();
			
			ClienteObjetoProduto clienteObjetoProduto = data.clienteObjetoProduto;
			
			ComboBox comboBoxStatus = (ComboBox) data.item.getItemProperty("Situação").getValue();
		
			clienteObjetoProduto.setStatusModel((Integer) comboBoxStatus.getValue());
			
			com.restmb.oauth.service.ParameterList headers = new ParameterList();
			headers.add("Content-Type", "application/json");
			client.publishChanges("/contrato/produto/"+clienteObjetoProduto.getId(), ClienteObjetoProduto.class,clienteObjetoProduto.toJson(),headers);

			
		}        
	}
	
	private class RemoveListener implements Button.ClickListener {
		
		private static final long serialVersionUID = 1L;

		@Override
		public void buttonClick(ClickEvent event) {
			ItemContractProdutoView data = (ItemContractProdutoView) event.getButton().getData();
			final ClienteObjetoProduto clienteObjetoProduto = data.clienteObjetoProduto;
			DialogWindow.messageSucess(getUI(),"Remover","Deseja Remover","Remover","Cancelar",false,true,true,new IMessage() {

				@Override
				public void ok() {
					try{
						client.deleteObject("/contrato/produto",clienteObjetoProduto.getId());
						defaultTable();
					}catch(Exception e){
						Notification.show("Falha ao remover");
					}
				}
				@Override
				public void discard() {}

				@Override
				public void cancel() {}
			});
		}        
	}

	public void visualizar(Object objeto){}	

	@Override
	public Produto commit() {
		return null;
	}

	@Override
	public void initData(Produto data) {}

	@Override
	public void modoView() {
	}

	@Override
	public void modoAdd() {
		contratoProdutoFormWindows = new SearchFormWindow<Produto>(client, ContractProdutoView.this,0,
				"/produto/busca", Produto.class,
				new TransactionsContainerProduct(),"Código","Produto","Situação");
		
		getUI().addWindow(contratoProdutoFormWindows);
	}


	@SuppressWarnings("rawtypes")
	@Override
	public void commitWindows(int resultTag) throws ViewException {
		try {
			Produto produto = contratoProdutoFormWindows.commit();

			ClienteObjetoProduto clienteOrdemProduto = new ClienteObjetoProduto();
			clienteOrdemProduto.setProduto(produto);

			try{
				clienteOrdemProduto = ((ClienteObjeto)clienteObjeto).adicionaProduto(client, clienteOrdemProduto);
				data.addTransaction(clienteOrdemProduto);
			}catch (Exception e) {
				Notification.show("Falha, Tente mais tarde: " + e.getMessage());
			}

		} catch (ViewException e) {

		}
	}
	
	class ItemContractProdutoView{
		public ClienteObjetoProduto clienteObjetoProduto;
		public com.vaadin.data.Item item;
		
		public ItemContractProdutoView(ClienteObjetoProduto clienteObjetoProduto, com.vaadin.data.Item item){
			this.clienteObjetoProduto = clienteObjetoProduto;
			this.item = item;
		}
	}
}
