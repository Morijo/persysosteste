package com.persys.osmanager.customer.contract;

import java.util.List;

import com.persys.osmanager.componente.helper.AttrDim;
import com.persys.osmanager.componente.interfaces.IFormWindows;
import com.persys.osmanager.exception.ViewException;
import com.restmb.Connection;
import com.restmb.RestMBClient;
import com.restmb.types.ClienteObjeto;
import com.restmb.types.Contrato;
import com.restmb.types.Recurso;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;

/** 
@author Ricardo Sabatine
@version Revision 1.1

Form para o contrato

@since 07/10/2013
*/
public class ContractRecursoView extends CustomComponent implements IFormWindows<Recurso<?>>{

	private static final long serialVersionUID = 1L;
	private VerticalLayout mainLayout;
	private Table tableContract = null;
	private final TransactionsContainer data = new TransactionsContainer();
	private ClienteObjeto<?> clienteObjeto = null;
	private RestMBClient client = null;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ContractRecursoView(RestMBClient client,ClienteObjeto<?> clienteObjeto) {
		this.client = client;
		this.clienteObjeto = clienteObjeto;
		
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		setWidth(AttrDim.FORM_WIDTH);
		setHeight(AttrDim.FORM_HEIGHT);
		
		Button buttonAdicionar = new Button("Adicionar Recurso",new Button.ClickListener() {
   		            /**
   					 * BOT?????????O SALVAR
   					 */
   					private static final long serialVersionUID = 1L;

   			        public void buttonClick(ClickEvent event) {
   		            	modoAdd();
   		            }
   		        });
   		
   		buttonAdicionar.setWidth("-1px");
   		buttonAdicionar.setHeight("-1px");
   		buttonAdicionar.setVisible(true);
   		buttonAdicionar.addStyleName("wide");
   		buttonAdicionar.addStyleName("default");
       	mainLayout.addComponent(buttonAdicionar);
   		mainLayout.setComponentAlignment(buttonAdicionar, new Alignment(34));
     	mainLayout.addComponent(modoTabela());
		
		return mainLayout;
	}
	
	 public Table modoTabela(){
		    tableContract = new Table() {
		        /**
				 * 
				 */
				private static final long serialVersionUID = 1L;

				@Override
		        protected String formatPropertyValue(Object rowId, Object colId,
		                Property<?> property) {
		          
		            return super.formatPropertyValue(rowId, colId, property);
		        }
		    };
		    tableContract.setSizeFull();
		    tableContract.addStyleName("borderless");
		    tableContract.setSelectable(true);
		    tableContract.setColumnCollapsingAllowed(true);
		    tableContract.setColumnReorderingAllowed(true);
		    data.removeAllContainerFilters();
		    tableContract.setContainerDataSource(data);
		   
		    tableContract.setVisibleColumns(new Object[] { "Codigo","Nome"});
		  
		    tableContract.addValueChangeListener(new ValueChangeListener() {
		        /**
				 * 
				 */
				private static final long serialVersionUID = 1L;
		
				@Override
		        public void valueChange(ValueChangeEvent event) {
		                visualizar(tableContract.getItem(tableContract.getValue()));
		            } 
		    });
		    
		    tableContract.setImmediate(true);
		    defaultTable();
			return tableContract;
		}
	
	public void defaultTable() {
		  	data.removeAllItems();
	    	try{
				Connection<Contrato> lista = Contrato.listaAll(client,"/contrato/"+this.clienteObjeto.getId()+"/recurso",Contrato.class);
		
				for(List<Contrato> listaContrato : lista){
					for(Contrato contrato : listaContrato){
						data.addTransaction(contrato);
		    		}
				}
			}catch (Exception e) {}
		}


		public class TransactionsContainer extends com.vaadin.data.util.IndexedContainer {

	        private static final long serialVersionUID = 1L;

	        public TransactionsContainer() {
	        	addContainerProperty("ID", Long.class, -1);
	            addContainerProperty("Nome", String.class, "");
	            addContainerProperty("Codigo", String.class, "");
	         }

	        @SuppressWarnings("unchecked")
			public void addTransaction(Contrato contrato) {
	            Object id = addItem();
	            com.vaadin.data.Item item = getItem(id);
	            if (item != null) {
	            	item.getItemProperty("ID").setValue(contrato.getId());
	                item.getItemProperty("Nome").setValue(contrato.getCliente().getRazaoNome());
	                item.getItemProperty("Codigo").setValue(contrato.getCodigo());
	            }
	        }
	    }
		
	public void visualizar(Object objeto){
		
	}	
	
	@Override
	public void modoView() {
		// TODO Auto-generated method stub
	}

	@Override
	public void modoAdd() {
	}

	@Override
	public void commitWindows(int resultTag) throws ViewException {
		
		
	}

	@Override
	public Recurso<?> commit() throws ViewException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void initData(Recurso<?> data) {}
	    
}
