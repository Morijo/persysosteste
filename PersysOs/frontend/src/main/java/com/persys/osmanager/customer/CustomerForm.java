package com.persys.osmanager.customer;

import java.util.Locale;
import java.util.ResourceBundle;
import org.vaadin.addons.maskedtextfield.MaskedTextField;
import com.persys.osmanager.componente.ComponenteFactory;
import com.persys.osmanager.componente.helper.AttrDim;
import com.persys.osmanager.componente.interfaces.IForm;
import com.persys.osmanager.customer.data.TransactionsContainerCustomer;
import com.persys.osmanager.data.AppData;
import com.persys.osmanager.exception.ViewException;
import com.restmb.RestMBClient;
import com.restmb.types.Cliente;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.DateField;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

/** 
@author Ricardo Sabatine
@version Revision 1.1

Form para o cliente

@since 25/09/2013
 */
/**
 * @author ricardosabatine
 *
 */

public class CustomerForm extends CustomComponent implements IForm<Cliente>{

	private static final long serialVersionUID = 1L;

	private VerticalLayout mainLayout;
	private ComboBox comboBoxStatus;
	private ComboBox comboBoxTipoCliente;
	private TextField textFieldCodigo;
	private TextField textFieldRazao;
	private TextField textFieldNomeFantasia;
	private TextField textFieldRGIE;
	private MaskedTextField textFieldCnpjCpf;
	private DateField dataNascimento;
	private TextField textFieldEmailPrincipal;

	private Cliente cliente = new Cliente();

	private static String errorMessage;

	private final static ResourceBundle resourceBundle;
	static{
		resourceBundle = ResourceBundle.getBundle("com/persys/frontend/customer",Locale.getDefault());
		errorMessage = resourceBundle.getString("requirederror");
	}

	private ComponenteFactory componenteFactory = new ComponenteFactory();

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public CustomerForm(RestMBClient client) {
		setWidth(AttrDim.FORM_WIDTH);
		setHeight(AttrDim.FORM_HEIGHT);

		buildMainLayout();
		setCompositionRoot(mainLayout);
	}

	private VerticalLayout buildMainLayout() {
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		//monta layout de código e status
		mainLayout.addComponent(buildHorizontalLayoutStatus());

		// textFieldNome
		textFieldRazao = componenteFactory.createTextFieldRequiredError(new TextField(), resourceBundle.getString("name"), resourceBundle.getString("requirederror"),
				AttrDim.FORM_COM_SINGLE_WIDTH);
		mainLayout.addComponent(textFieldRazao);

		// textFieldNome
		textFieldNomeFantasia = componenteFactory.createTextFieldRequiredError(new TextField(), resourceBundle.getString("nick"), resourceBundle.getString("requirederror"),
				AttrDim.FORM_COM_SINGLE_WIDTH);
		mainLayout.addComponent(textFieldNomeFantasia);

		mainLayout.addComponent(buildHorizontalLayoutNascimEstadoC());

		mainLayout.addComponent(buildHorizontalLayoutRGCPF());

		textFieldEmailPrincipal = componenteFactory.createTextFieldRequiredError(new TextField(), resourceBundle.getString("email"), resourceBundle.getString("requirederror"),
				AttrDim.FORM_COM_SINGLE_WIDTH);

		mainLayout.addComponent(textFieldEmailPrincipal);

		return mainLayout;
	}

	@SuppressWarnings("deprecation")
	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutStatus() {
		HorizontalLayout horizontalLayout = createHorizontalLayout();

		textFieldCodigo = new TextField(resourceBundle.getString("code"));
		textFieldCodigo.setImmediate(false);
		textFieldCodigo.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		textFieldCodigo.setHeight("-1px");
		horizontalLayout.addComponent(textFieldCodigo);

		comboBoxStatus = new ComboBox();
		comboBoxStatus.setCaption(resourceBundle.getString("status"));
		comboBoxStatus.setImmediate(false);
		comboBoxStatus.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		comboBoxStatus.setHeight("-1px");
		comboBoxStatus.setContainerDataSource(AppData.listStatusInteger());
		comboBoxStatus.setItemCaptionMode(ComboBox.ITEM_CAPTION_MODE_PROPERTY);
		comboBoxStatus.setItemCaptionPropertyId("statusNome");
		comboBoxStatus.setNullSelectionAllowed(false);
		horizontalLayout.addComponent(comboBoxStatus);

		return horizontalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutRGCPF() {
		HorizontalLayout horizontalLayout = createHorizontalLayout();

		// comboBoxStatus
		textFieldCnpjCpf = new MaskedTextField();
		textFieldCnpjCpf.setCaption(resourceBundle.getString("cpf"));
		textFieldCnpjCpf.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		textFieldCnpjCpf.setRequiredError(errorMessage);
		textFieldCnpjCpf.setRequired(true);
		textFieldCnpjCpf.setMask("###.###.###-##");
		horizontalLayout.addComponent(textFieldCnpjCpf);

		// textFieldCodigo
		textFieldRGIE = new TextField();
		textFieldRGIE.setCaption(resourceBundle.getString("rg"));
		textFieldRGIE.setImmediate(false);
		textFieldRGIE.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		textFieldRGIE.setHeight("-1px");
		horizontalLayout.addComponent(textFieldRGIE);

		return horizontalLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayoutNascimEstadoC() {
		HorizontalLayout horizontalLayout = createHorizontalLayout();

		comboBoxTipoCliente = new ComboBox();
		comboBoxTipoCliente.setCaption(resourceBundle.getString("legalstatus"));
		comboBoxTipoCliente.setImmediate(true);
		comboBoxTipoCliente.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		comboBoxTipoCliente.setHeight("-1px");
		comboBoxTipoCliente.setNullSelectionAllowed(false);
		comboBoxTipoCliente.setContainerDataSource(TransactionsContainerCustomer.listStatusCustomer());
		horizontalLayout.addComponent(comboBoxTipoCliente);

		// textFieldCodigo
		dataNascimento = new DateField();
		dataNascimento.setCaption(resourceBundle.getString("birthdate"));
		dataNascimento.setImmediate(false);
		dataNascimento.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		dataNascimento.setHeight("-1px");
		horizontalLayout.addComponent(dataNascimento);
		return horizontalLayout;
	}

	private HorizontalLayout createHorizontalLayout() {
		HorizontalLayout horizontalLayout = new HorizontalLayout();
		horizontalLayout.setImmediate(false);
		horizontalLayout.setWidth("-1px");
		horizontalLayout.setHeight("-1px");
		horizontalLayout.setMargin(false);
		horizontalLayout.setSpacing(true);
		return horizontalLayout;
	}

	private void alteraMascara() {
		comboBoxTipoCliente.addValueChangeListener(new ValueChangeListener() {
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				if(comboBoxTipoCliente.getValue().toString().contentEquals("Físico")){
					textFieldCnpjCpf.setMask("###.###.###-##");
				}else{
					textFieldCnpjCpf.setMask("##.###.###.####-##");
				}
			}
		});
	}

	@Override
	public void modoView() {
		textFieldCodigo.setReadOnly(true);
	}

	@Override
	public void modoAdd() {
		textFieldCodigo.setReadOnly(true);
	}

	/* (non-Javadoc)
	 * @see com.view.componente.interfaces.IForm#commit()
	 */
	@Override
	public Cliente commit() throws ViewException{

		try{
			componenteFactory.valida();
			cliente.setCnpjCpf(textFieldCnpjCpf.getValue().replace(".", "").replace("-", ""));
			cliente.setFantasiaSobrenome(textFieldNomeFantasia.getValue());
			cliente.setNomeUsuario(cliente.getFantasiaSobrenome());
			cliente.setTipoCliente((String)comboBoxTipoCliente.getValue());
			cliente.setRazaoNome(textFieldRazao.getValue());
			cliente.setIeRg(textFieldRGIE.getValue());
			cliente.setDataNascimento(dataNascimento.getValue());
			cliente.setEmailPrincipal(textFieldEmailPrincipal.getValue());
			cliente.setCodigo(textFieldCodigo.getValue());
			cliente.setStatusModel((Integer)comboBoxStatus.getValue());
			return cliente;
		}catch (Exception e) {
			throw new ViewException(e.getMessage());
		}

	}

	@Override
	public void initData(Cliente data) {

		textFieldCnpjCpf.setValue(data.getCnpjCpf());
		textFieldCodigo.setValue(data.getCodigo());
		textFieldNomeFantasia.setValue(data.getFantasiaSobrenome());
		textFieldRazao.setValue(data.getRazaoNome());
		textFieldRGIE.setValue(data.getIeRg());
		comboBoxStatus.select(data.getStatusModel());
		comboBoxTipoCliente.select(data.getTipoCliente());
		dataNascimento.setValue(data.getDataNascimento());
		textFieldEmailPrincipal.setValue(data.getEmailPrincipal());

		alteraMascara();
		cliente = data;
	}
}