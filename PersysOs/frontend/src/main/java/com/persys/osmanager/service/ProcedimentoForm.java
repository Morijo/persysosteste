package com.persys.osmanager.service;

import java.util.Locale;
import java.util.ResourceBundle;

import br.com.model.interfaces.IProcedimento;

import com.persys.osmanager.componente.ComponenteFactory;
import com.persys.osmanager.componente.ContainerUtils;
import com.persys.osmanager.componente.helper.AttrDim;
import com.persys.osmanager.componente.interfaces.IForm;
import com.persys.osmanager.data.AppData;
import com.persys.osmanager.exception.ViewException;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.event.ShortcutAction.ModifierKey;
import com.vaadin.ui.AbstractField;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

/**
 * @author ricardosabatine, jpmorijo
 * @version 1.0.0
 * @since 18/02/2013 Form Para procedimento
 */

public class ProcedimentoForm extends CustomComponent implements
		IForm<IProcedimento> {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 1L;

	private VerticalLayout mainLayout;
	private TextArea textFieldDescricao;
	private TextField textFieldNome;
	private ComboBox comboBoxStatus;
	private TextField textFieldCodigo;

	private final ComponenteFactory componenteFactory = new ComponenteFactory();

	private static final ResourceBundle bundle;
	static {
		bundle = ResourceBundle.getBundle("com/persys/frontend/procedure",
				Locale.getDefault());
	}
	IProcedimento procedimento = null;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public ProcedimentoForm() {
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		mainLayout.addComponent(buildHorizontalLayout_1());

		// textFieldNome
		textFieldNome = componenteFactory.createTextFieldRequiredError(
				new TextField(), bundle.getString("procedurename"),
				bundle.getString("procedurenameinvalid"),
				AttrDim.FORM_COM_SINGLE_WIDTH);
		textFieldNome.setMaxLength(100);
		textFieldNome.setNullRepresentation("");
		textFieldNome.addShortcutListener(
		        new AbstractField.FocusShortcut(textFieldNome, KeyCode.ENTER,
		                                        ModifierKey.SHIFT));
		textFieldNome.focus();
		
		mainLayout.addComponent(textFieldNome);

		// textFieldNome
		textFieldDescricao = new TextArea();
		textFieldDescricao.setCaption(bundle.getString("description"));
		textFieldDescricao.setImmediate(false);
		textFieldDescricao.setWidth(AttrDim.FORM_COM_SINGLE_WIDTH);
		textFieldDescricao.setHeight("-1px");
		textFieldDescricao.setNullRepresentation("");
		textFieldDescricao.setMaxLength(1000);
		mainLayout.addComponent(textFieldDescricao);

		return mainLayout;
	}

	@SuppressWarnings("deprecation")
	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		HorizontalLayout horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);

		// textFieldCodigo
		textFieldCodigo = new TextField();
		textFieldCodigo.setCaption(bundle.getString("code"));
		textFieldCodigo.setImmediate(false);
		textFieldCodigo.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		textFieldCodigo.setMaxLength(255);
		textFieldCodigo.setHeight("-1px");
		horizontalLayout_1.addComponent(textFieldCodigo);

		// comboBoxStatus
		comboBoxStatus = new ComboBox();
		comboBoxStatus.setCaption(bundle.getString("situation"));
		comboBoxStatus.setImmediate(false);
		comboBoxStatus.setContainerDataSource(ContainerUtils.listaStatusBean());
		comboBoxStatus.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		comboBoxStatus.setHeight("-1px");
		comboBoxStatus.setContainerDataSource(AppData.listStatusInteger());
		comboBoxStatus.setItemCaptionMode(ComboBox.ITEM_CAPTION_MODE_PROPERTY);
		comboBoxStatus.setItemCaptionPropertyId("statusNome");
		comboBoxStatus.setNullSelectionAllowed(false);
		horizontalLayout_1.addComponent(comboBoxStatus);

		return horizontalLayout_1;
	}

	@Override
	public IProcedimento commit() throws ViewException {
		try {
			textFieldNome.validate();
			procedimento.setCodigo(textFieldCodigo.getValue());
			procedimento.setTitulo(textFieldNome.getValue());
			procedimento.setDescricao(textFieldDescricao.getValue());
			procedimento.setStatusModel((Integer) comboBoxStatus.getValue());
			return procedimento;
		} catch (Exception e) {
			throw new ViewException(e.getMessage());
		}
	}

	@Override
	public void initData(IProcedimento data) {

		textFieldCodigo.setReadOnly(false);
		textFieldCodigo.setValue(data.getCodigo());
		textFieldNome.setValue(data.getTitulo());
		textFieldDescricao.setValue(data.getDescricao());
		comboBoxStatus.select(data.getStatusModel());

		this.procedimento = data;

	}

	@Override
	public void modoView() {
		textFieldCodigo.setReadOnly(true);
	}

	@Override
	public void modoAdd() {
		textFieldCodigo.setReadOnly(true);
	}

}
