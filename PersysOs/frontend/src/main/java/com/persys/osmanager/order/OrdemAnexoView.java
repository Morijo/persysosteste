package com.persys.osmanager.order;

import br.com.model.interfaces.IOrdem;

import com.persys.osmanager.componente.helper.AttrDim;
import com.persys.osmanager.order.data.TransactionsContainerAnexoData;
import com.restmb.RestMBClient;
import com.restmb.types.Anexo;
import com.vaadin.data.Item;
import com.vaadin.data.Property;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.event.ItemClickEvent.ItemClickListener;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

/** 
@author Ricardo Sabatine
@version Revision 1.1

Form para o contrato

@since 07/10/2013
 */
public class OrdemAnexoView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Table tableAnexo = null;
	private IOrdem ordem;
	private RestMBClient client = null;
	private TransactionsContainerAnexoData transactionsContainerAnexoData = new TransactionsContainerAnexoData(); 
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public OrdemAnexoView(RestMBClient client, IOrdem ordem) {
		this.client = client;
		this.ordem = ordem;

		setWidth(AttrDim.FORM_WIDTH);
		setHeight(AttrDim.FORM_HEIGHT);

		setCompositionRoot(buildMainLayout());

	}

	private VerticalLayout buildMainLayout() {
		// common part: create layout
		VerticalLayout mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setSpacing(true);
		mainLayout.addComponent(modoTabela());

		return mainLayout;
	}

	public Table modoTabela(){
		tableAnexo = new Table() {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			protected String formatPropertyValue(Object rowId, Object colId,
					Property<?> property) {

				return super.formatPropertyValue(rowId, colId, property);
			}
		};
		tableAnexo.setSizeFull();
		tableAnexo.addStyleName("borderless");
		tableAnexo.setSelectable(true);
		tableAnexo.setColumnCollapsingAllowed(true);
		tableAnexo.setColumnReorderingAllowed(true);
		tableAnexo.setContainerDataSource(transactionsContainerAnexoData);
		tableAnexo.setVisibleColumns(new Object[] { "Id","Imagem","Descricao"});
		tableAnexo.setColumnExpandRatio("Descricao", 1.0f);

		tableAnexo.addItemClickListener(new ItemClickListener() {
			
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;

			@Override
			public void itemClick(ItemClickEvent event) {
				Item item = event.getItem();
				visualizar(item.getItemProperty("Id").getValue());
			}
		});

		tableAnexo.setImmediate(true);
		defaultTable();
		return tableAnexo;
	}

	public void defaultTable() {
		transactionsContainerAnexoData.removeAllItems();
		try{
			transactionsContainerAnexoData.load(client, "/ordem/"+ordem.getId()+"/anexo");
		}catch (Exception e) {}
	}

	public void visualizar(Object objeto){
		Long id = (Long) objeto;
		Anexo anexo = new Anexo();
		anexo = anexo.pesquisa(client, id);
		getUI().addWindow(new OrdemAnexoViewWindows(anexo));
	}	
}
