package com.persys.osmanager.contact;

import java.util.Locale;
import java.util.ResourceBundle;

import com.persys.osmanager.componente.ComponenteFactory;
import com.persys.osmanager.componente.helper.AttrDim;
import com.persys.osmanager.componente.interfaces.IForm;
import com.persys.osmanager.data.AppData;
import com.persys.osmanager.exception.ViewException;
import com.restmb.types.Contato;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class ContactForm extends CustomComponent implements IForm<Contato> {

	private static final long serialVersionUID = 1L;
	private ComboBox comboBoxTipo;
	private TextField textFieldNome;
	private TextField textFieldEmail;
	private TextField textFieldTelefoneFixo;
	private TextField textFieldTelefoneCelular;
	
	private final static ResourceBundle resourceBundle;
	private static String errorMessage;
	private final ComponenteFactory componenteFactory = new ComponenteFactory();

	static{
		 resourceBundle = ResourceBundle.getBundle("com/persys/frontend/contact",Locale.getDefault());
		 errorMessage = resourceBundle.getString("requirederror");
	}
	
	final BeanItemContainer<String> beansContact = AppData.listStatusContato();
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	private Contato contato;
	
	public ContactForm() {
		setCompositionRoot(buildMainLayout());

		setWidth("100.0%");
		setHeight("100.0%");
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		VerticalLayout mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		comboBoxTipo = new ComboBox();
		comboBoxTipo.setCaption(resourceBundle.getString("contacttype"));
		comboBoxTipo.setImmediate(false);
		comboBoxTipo.setWidth(AttrDim.FORM_COM_SINGLE_WIDTH);
		comboBoxTipo.setHeight("-1px");
		comboBoxTipo.setContainerDataSource(beansContact);
		
		mainLayout.addComponent(comboBoxTipo);
		
		textFieldNome = componenteFactory.createTextFieldRequiredError(new TextField(), resourceBundle.getString("name"), errorMessage, AttrDim.FORM_COM_SINGLE_WIDTH);
		mainLayout.addComponent(textFieldNome);
		
		textFieldEmail = componenteFactory.createTextFieldEmailRequiredError(new TextField(), resourceBundle.getString("email"), 
				errorMessage, AttrDim.FORM_COM_SINGLE_WIDTH);
		mainLayout.addComponent(textFieldEmail);
		
		mainLayout.addComponent(buildHorizontalLayoutTelefone());
		
		return mainLayout;
	}
	
	private HorizontalLayout buildHorizontalLayoutTelefone() {
		HorizontalLayout horizontalLayout = createHorizontalLayout();

		textFieldTelefoneFixo = new TextField();
		textFieldTelefoneFixo.setCaption(resourceBundle.getString("phone"));
		textFieldTelefoneFixo.setImmediate(false);
		textFieldTelefoneFixo.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		textFieldTelefoneFixo.setHeight("-1px");
		horizontalLayout.addComponent(textFieldTelefoneFixo);

		textFieldTelefoneCelular = new TextField();
		textFieldTelefoneCelular.setCaption(resourceBundle.getString("phonemobile"));
		textFieldTelefoneCelular.setImmediate(false);
		textFieldTelefoneCelular.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		textFieldTelefoneCelular.setHeight("-1px");
		
		horizontalLayout.addComponent(textFieldTelefoneCelular);

		return horizontalLayout;
	}
	
	private HorizontalLayout createHorizontalLayout() {
		HorizontalLayout horizontalLayout = new HorizontalLayout();
		horizontalLayout.setImmediate(false);
		horizontalLayout.setWidth("-1px");
		horizontalLayout.setHeight("-1px");
		horizontalLayout.setMargin(false);
		horizontalLayout.setSpacing(true);
		return horizontalLayout;
	}

	@Override
	public Contato commit() throws ViewException {
		
		if(contato == null){
			contato = new Contato();
		}
		try{
			textFieldNome.validate();
			textFieldEmail.validate();
		
			contato.setNome(textFieldNome.getValue());
			contato.setEmail(textFieldEmail.getValue());
			contato.setTelefoneFixo(textFieldTelefoneFixo.getValue());
			contato.setTelefoneMovel(textFieldTelefoneCelular.getValue());
			contato.setTipoContato((String)comboBoxTipo.getValue());
		}catch(Exception e){
			throw new ViewException(e.getMessage());
		}
		return contato;
	}

	@Override
	public void initData(Contato data) {
		contato = data;
		
		if(data != null){
			textFieldNome.setValue(contato.getNome());
			textFieldEmail.setValue(contato.getEmail());
			textFieldTelefoneFixo.setValue(contato.getTelefoneFixo());
			textFieldTelefoneCelular.setValue(contato.getTelefoneMovel());
			comboBoxTipo.select(contato.getTipoContato());
		}
	}

	@Override
	public void modoView() {}

	@Override
	public void modoAdd() {}

}
