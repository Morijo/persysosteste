package com.persys.osmanager.order;

import java.util.Locale;
import java.util.ResourceBundle;

import br.com.model.interfaces.ISituacaoOrdem;

import com.persys.osmanager.componente.ComponenteFactory;
import com.persys.osmanager.componente.ContainerUtils;
import com.persys.osmanager.componente.helper.AttrDim;
import com.persys.osmanager.componente.interfaces.IForm;
import com.persys.osmanager.data.AppData;
import com.persys.osmanager.exception.ViewException;
import com.persys.osmanager.order.data.TransactionsContainerSituacaoData;
import com.restmb.RestMBClient;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.ShortcutAction.KeyCode;
import com.vaadin.event.ShortcutAction.ModifierKey;
import com.vaadin.ui.AbstractField;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

/**
 * @author ricardosabatine, jpmorijo
 * @version 1.0.0
 * @since 27/03/2013 Form Situação Ordem de Serviço
 * <p>Traduzido Ingles, Portugues, Pacote com traducoes com/persys/frontend/situation</p>
 */

public class SituacaoForm extends CustomComponent implements IForm<ISituacaoOrdem>{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 1L;
	private VerticalLayout mainLayout 			= null;
	private TextArea 	   textFieldDescricao 	= null;
	private TextField 	   textFieldNome 		= null;
	private ComboBox 	   comboBoxStatus 		= null;
	private TextField 	   textFieldCodigo 		= null;
	private SituacaoOrdemFluxoView situacaoOrdemFluxoView = null;

	private ISituacaoOrdem situacaoOrdem = null;
	private RestMBClient restMBClient= null;
	private TransactionsContainerSituacaoData transactionsContainerSituacaoData = null;

	private final ComponenteFactory componenteFactory = new ComponenteFactory();

	private final static ResourceBundle bundle;
	static{
		bundle = ResourceBundle.getBundle("com/persys/frontend/situation",Locale.getDefault());
	}

	public SituacaoForm() {
		setWidth("100.0%");
		setHeight("100.0%");
		setCompositionRoot(buildMainLayout());
	}
	
	public SituacaoForm(RestMBClient restMBClient, TransactionsContainerSituacaoData transactionsContainerSituacaoData) {
		
		this.restMBClient = restMBClient;
		this.transactionsContainerSituacaoData = transactionsContainerSituacaoData;
		
		setWidth("100.0%");
		setHeight("100.0%");
		setCompositionRoot(buildMainLayout());
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		mainLayout.addComponent(buildHorizontalLayout_1());
		textFieldNome = componenteFactory.createTextFieldRequiredError(new TextField(), bundle.getString("situationname"),
				bundle.getString("situationnameinvalid"),
				AttrDim.FORM_COM_SINGLE_WIDTH);
		textFieldNome.setMaxLength(100);
		textFieldNome.addShortcutListener(
		        new AbstractField.FocusShortcut(textFieldNome, KeyCode.ENTER,
		                                        ModifierKey.SHIFT));
		textFieldNome.focus();
		
		mainLayout.addComponent(textFieldNome);

		textFieldDescricao = new TextArea();
		textFieldDescricao.setCaption(bundle.getString("description"));
		textFieldDescricao.setImmediate(false);
		textFieldDescricao.setWidth(AttrDim.FORM_COM_SINGLE_WIDTH);
		textFieldDescricao.setMaxLength(255);
		textFieldDescricao.setHeight("-1px");
		mainLayout.addComponent(textFieldDescricao);
		
		situacaoOrdemFluxoView = new SituacaoOrdemFluxoView(restMBClient, transactionsContainerSituacaoData);
		mainLayout.addComponent(situacaoOrdemFluxoView);
		
		return mainLayout;
	}

	@SuppressWarnings("deprecation")
	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		HorizontalLayout horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);

		// textFieldCodigo
		textFieldCodigo = new TextField();
		textFieldCodigo.setCaption(bundle.getString("code"));
		textFieldCodigo.setImmediate(false);
		textFieldCodigo.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		textFieldCodigo.setHeight("-1px");
		horizontalLayout_1.addComponent(textFieldCodigo);

		// comboBoxStatus
		comboBoxStatus = new ComboBox();
		comboBoxStatus.setCaption(bundle.getString("situation"));
		comboBoxStatus.setImmediate(false);
		comboBoxStatus.setContainerDataSource(ContainerUtils.listaStatusBean());
		comboBoxStatus.setWidth(AttrDim.FORM_COM_DOUBLE_WIDTH);
		comboBoxStatus.setHeight("-1px");
		comboBoxStatus.setContainerDataSource(AppData.listStatusInteger());
		comboBoxStatus.setItemCaptionMode(ComboBox.ITEM_CAPTION_MODE_PROPERTY);
		comboBoxStatus.setItemCaptionPropertyId("statusNome");
		comboBoxStatus.setNullSelectionAllowed(false);
		horizontalLayout_1.addComponent(comboBoxStatus);

		return horizontalLayout_1;
	}


	@Override
	public ISituacaoOrdem commit() throws ViewException {
		try{
			textFieldNome.validate();
			situacaoOrdem.setCodigo(textFieldCodigo.getValue());
			situacaoOrdem.setNome(textFieldNome.getValue());
			situacaoOrdem.setDescricao(textFieldDescricao.getValue());
			situacaoOrdem.setStatusModel((Integer)comboBoxStatus.getValue());
			return situacaoOrdem;
		}catch(Exception e){
			throw new ViewException(e.getMessage());
		}	
	}

	@Override
	public void initData(ISituacaoOrdem data) {

		textFieldCodigo.setReadOnly(false);
		textFieldCodigo.setValue(data.getCodigo());
		textFieldNome.setValue(data.getNome());
		textFieldDescricao.setValue(data.getDescricao());
		comboBoxStatus.select(data.getStatusModel());
		situacaoOrdemFluxoView.setSituacaoOrdem(data);
		this.situacaoOrdem = data;

	}

	@Override
	public void modoView() {
		textFieldCodigo.setReadOnly(true);
		situacaoOrdemFluxoView.setVisible(true);
		situacaoOrdemFluxoView.createTable();
		
	}

	@Override
	public void modoAdd() {
		textFieldCodigo.setReadOnly(true);
		situacaoOrdemFluxoView.setVisible(false);
		
	}

}
